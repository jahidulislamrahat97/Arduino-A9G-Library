#ifndef A9G_EVENT_H
#define A9G_EVENT_H

typedef enum Event_ID_t
{
    // event will be Term List
    EVENT_CREG = 0,
    EVENT_CTZV, // network related: not clear
    EVENT_CIEV, // call
    EVENT_CPMS,
    EVENT_CMT,
    EVENT_CMTI,
    EVENT_CMGL,
    EVENT_NEW_SMS_RECEIVED, //TERM_CMGR,
    EVENT_GPSRD,
    EVENT_CGATT,
    EVENT_AGPS,
    EVENT_GPNT,
    EVENT_MQTTPUBLISH,
    EVENT_CMGS,
    EVENT_CME,
    EVENT_CMS,
    EVENT_MAX,
} Event_ID_t;

typedef enum CME_Error_t
{
    PHONE_FAILURE = 0,
    NO_CONNECT_PHONE,
    PHONE_ADAPTER_LINK_RESERVED,
    OPERATION_NOT_ALLOWED,
    OPERATION_NOT_SUPPORTED,
    PHSIM_PIN_REQUIRED,
    PHFSIM_PIN_REQUIRED,
    PHFSIM_PUK_REQUIRED,
    SIM_NOT_INSERTED = 10,
    SIM_PIN_REQUIRED,
    SIM_PUK_REQUIRED,
    SIM_FAILURE,
    SIM_BUSY,
    SIM_WRONG,
    INCORRECT_PASSWORD,
    SIM_PIN2_REQUIRED,
    SIM_PUK2_REQUIRED,
    MEMORY_FULL = 20,
    INVALID_INDEX,
    NOT_FOUND,
    MEMORY_FAILURE,
    TEXT_LONG,
    INVALID_CHAR_INTEXT,
    DAIL_STR_LONG,
    INVALID_CHAR_INDIAL,
    NO_NET_SERVICE = 30,
    NETWORK_TIMOUT,
    NOT_ALLOW_EMERGENCY,
    NET_PER_PIN_REQUIRED = 40,
    NET_PER_PUK_REQUIRED,
    NET_SUB_PER_PIN_REQ,
    NET_SUB_PER_PUK_REQ,
    SERVICE_PROV_PER_PIN_REQ,
    SERVICE_PROV_PER_PUK_REQ,
    CORPORATE_PER_PIN_REQ,
    CORPORATE_PER_PUK_REQ,
    PHSIM_PBK_REQUIRED,
    EXE_NOT_SURPORT,
    EXE_FAIL,
    NO_MEMORY,
    OPTION_NOT_SURPORT,
    PARAM_INVALID,
    EXT_REG_NOT_EXIT,
    EXT_SMS_NOT_EXIT,
    EXT_PBK_NOT_EXIT,
    EXT_FFS_NOT_EXIT,
    INVALID_COMMAND_LINE,
    GPRS_ILLEGAL_MS_3 = 103,
    GPRS_ILLEGAL_MS_6 = 106,
    GPRS_SVR_NOT_ALLOWED,
    GPRS_PLMN_NOT_ALLOWED = 111,
    GPRS_LOCATION_AREA_NOT_ALLOWED,
    GPRS_ROAMING_NOT_ALLOWED,
    GPRS_OPTION_NOT_SUPPORTED = 132,
    GPRS_OPTION_NOT_SUBSCRIBED,
    GPRS_OPTION_TEMP_ORDER_OUT,
    GPRS_PDP_AUTHENTICATION_FAILURE = 149,
    GPRS_INVALID_MOBILE_CLASS = 150,
    GPRS_UNSPECIFIED_GPRS_ERROR = 148,
    SIM_VERIFY_FAIL = 264,
    SIM_UNBLOCK_FAIL,
    SIM_CONDITION_NO_FULLFILLED,
    SIM_UNBLOCK_FAIL_NO_LEFT,
    SIM_VERIFY_FAIL_NO_LEFT,
    SIM_INVALID_PARAMETER,
    SIM_UNKNOW_COMMAND,
    SIM_WRONG_CLASS,
    SIM_TECHNICAL_PROBLEM,
    SIM_CHV_NEED_UNBLOCK,
    SIM_NOEF_SELECTED,
    SIM_FILE_UNMATCH_COMMAND,
    SIM_CONTRADICTION_CHV,
    SIM_CONTRADICTION_INVALIDATION,
    SIM_MAXVALUE_REACHED,
    SIM_PATTERN_NOT_FOUND,
    SIM_FILEID_NOT_FOUND,
    SIM_STK_BUSY,
    SIM_UNKNOW,
    SIM_PROFILE_ERROR,
    CME_ERROR_MAX
} CME_Error_t;

typedef enum CMS_Error_t
{
    CMS_ERROR_NONE = 0,
    CMS_ERROR_MAX
} CMS_Error_t;

typedef enum Message_Type_t
{
    READ_MESSAGE = 1,
    UNREAD_MESSAGE = 2,
    ALL_MESSAGE = 4
} Message_Type_t;
typedef struct A9G_Event_t{
    Event_ID_t id;
    int error;
    char message[100];
    char topic[50];
    char number[16];
    char date_time[25];
    char param1[10];
    char param2[30];
    char param3[50];
} A9G_Event_t;

#endif